<!doctype html>
<html lang="en">
<head>
	<base href="/">
	<meta charset="UTF-8">
	<title>chatBox client</title>
	<link rel="stylesheet" href="css/bootstrap.min.css">

	<script src="/socket.io/socket.io.js"></script>
	<script src="js/zepto.min.js"></script>
	<style>
		.chatArea{
			position: fixed;
			bottom: 0;
			width: 100%;
			height: 80px;
		}
		#chatTextArea{
			height: 50px;
		}
		#chatroomBox{
			width: 100%;
			overflow: auto;
			background-color: #ccc;
		}
		#statusContainer{
			width: 100%;
		}
		
		#chatroomBox .room{
			overflow: auto;
		}

		#chatroomBox .item{
			clear: both;
			width: 90%;
			padding-top: 5px;
			padding-bottom: 5px;
			font-size: 14px;
			padding-right: 5%;
			background-color: #fff;
			

		}

		#chatroomBox .item:last-child{
			margin-bottom: 10px;
		}



		#chatroomBox .item.you{
			float: left;
			-webkit-box-shadow:1px 2px 2px 0px rgba(0,0,0,0.5);
			-moz-box-shadow: 1px 2px 2px 0px rgba(0,0,0,0.5);
			box-shadow: 1px 2px 2px 0px rgba(0,0,0,0.5);
		}
		#chatroomBox .from{
			display: block;
			color: #0F0;
			font-weight: bold;
			padding: 4px;
			background-color: #fff;
			margin-bottom: 3px;
			clear: both;

		}

		#chatroomBox .from.fromYou{
			float: left;
		}

		
		
		.you +  .fromYou , .other + .fromOther{
			display: none !important;
			font-weight: normal;
		}
	
		#chatroomBox .from.fromOther{
			
			float: right;
		}
		

		#chatroomBox .item.other{
			float: right;
			-webkit-box-shadow: -2px 2px 3px 0px rgba(0,0,0,0.5);
			-moz-box-shadow: -2px 2px 3px 0px rgba(0,0,0,0.5);
			box-shadow: -2px 2px 3px 0px rgba(0,0,0,0.5);
			padding-right: 3%;
			padding-left: 2%;
		}

		.item.you + .fromYou + .item.you,.item.other+ .fromOther + .item.other{
			margin-top: 0 !important;
		}
	</style>
</head>

<body>
	
	<div class="container-fluid">
		<div class="btn btn-default btn-block" id="statusContainer">connecting...</div>
		<div id="chatroomBox">
			<div class="room">
				
			</div>
			
		</div>
		<div class="chatArea row">
			<textarea class="form-control col-md-12" id="chatTextArea" disabled="disabled" placeholder="connecting..."></textarea>
			<button class="btn btn-block btn-primary col-md-12" id="submitButton">send</button>
			</div>
			
		</div>
	</div>
<script>
var name = '<%= name %>';
var key = '<%= key %>';
window.nick = false;
var $chatroomBox = null;

var setStatus = function(msg,state){
	$status.html(msg);
	$status.attr('class','btn btn-'+state);
};

var setStatusOnline = function(){
	$chatTextArea.attr('disabled',null);
	$chatTextArea.attr('placeholder','type here to chat with '+name+'...');
	setStatus(name+' is online','success');
};

var setStatusOffline = function(msg){
	$chatTextArea.attr('disabled','disabled');
	$chatTextArea.attr('placeholder',msg);
	setStatus(msg,'danger');
};

var sendMsg = function(msg,socket){
	socket.emit('client:sendMsg',{msg:msg,nick:window.nick,key:key});
	var content = '<div class="from fromYou">you</div><div class="item you">'+msg+'</div>';

	$(content).appendTo($chatroomBox);

	var innerHeight = $chatroomBox.height();
	var outerHeight = $('#chatroomBox').height();
	var dif = innerHeight - outerHeight;
	//console.log('dif='+dif+'; innerHeight='+innerHeight);
	if(dif>0){
		// /console.log('dif='+dif);
		$('#chatroomBox').scrollTop(dif);
	}
};

var gotMsg = function(msg){
	var content = '<div class="from fromOther"><%= name %></div><div class="item other">'+msg+'</div>';
	$(content).appendTo($chatroomBox);
	var innerHeight = $chatroomBox.height();
	var outerHeight = $('#chatroomBox').height();
	var dif = innerHeight - outerHeight;
	//console.log('dif='+dif+'; innerHeight='+innerHeight);
	if(dif>0){
		// /console.log('dif='+dif);
		$('#chatroomBox').scrollTop(dif);
	}
};

	$(document).ready(function(){
		$chatroomBox = $('#chatroomBox .room');
		 $chatTextArea = $('#chatTextArea');

		//setting height 
		var promptCycle = function(){
			var result = prompt("Please enter your preferred name");
			if(result){
				return result;
			} else {
				return promptCycle();
			}
		};

		//window.nick = promptCycle();

		var th = $(window).height();
		var heightToCut = $('#statusContainer').height()+$('.chatArea').height();
		$('#chatroomBox').css('height',(th-heightToCut)+'px');
		


		 $status = $('#statusContainer');

		 $chatTextArea.on('focus',function(){
		 	if(!window.nick){
		 		window.nick = promptCycle();
		 	}
		 });

		var socket = io.connect();
		socket.on('connection:finished',function(data){
			setStatus('checking online status','info');
			console.log('connected to socket , socket.id ='+data);
			socket.emit('normal:join',{key:key,nick:nick});
			console.log('joining for session');
		});


		socket.on('normal:joined',function(data){
			console.log('normal joined '+data);
			if(data.status=='online'){
				setStatusOnline();
			} else {
				setStatus(name+' is offline','danger');
			}
			
		});

		socket.on('chatbox:cameOnline',function(){
			setStatusOnline();
		});

		socket.on('chatbox:goneOffline',function(){
			setStatusOffline(name+' is offline');
		});

		socket.on('chatBoxToclient:gotMsg',function(data){
			console.log('chatBoxToclient:gotMsg',data);
			var msg = data.msg;
			gotMsg(msg);
		});

		socket.on('disconnect', function () {
			setStatusOffline('there is some netowrk error. ');
		});

		var $submitButton = $('#submitButton');
		$submitButton.on('click',function(){
			var msg = $chatTextArea.val();
			if($.trim(msg)){
				if($.trim(msg).length>0){
					sendMsg(msg,socket);
					$chatTextArea.val('');
				}
			}
			
		});

		$(document).on('keydown',function(e){
			if(e.keyCode==13){
				e.preventDefault();
				$submitButton.trigger('click');
				return false;
			}
		});
		
	});
</script>	
</body>
</html>